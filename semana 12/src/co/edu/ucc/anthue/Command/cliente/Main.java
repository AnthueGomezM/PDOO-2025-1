package co.edu.ucc.anthue.Command.cliente;

import co.edu.ucc.anthue.Command.comandos.ComandoEncenderLuz;
import co.edu.ucc.anthue.Command.comandos.ComandoSubirCortina;
import co.edu.ucc.anthue.Command.interfaz.Comando;
import co.edu.ucc.anthue.Command.invocador.Boton;
import co.edu.ucc.anthue.Command.receptores.Cortina;
import co.edu.ucc.anthue.Command.receptores.Luz;
import co.edu.ucc.anthue.Personalizado;

public class Main {
    public static void main(String[] args) {
        Personalizado programa = new Personalizado("""
                 ------------------------------------------------------------------------------------------------------------
                 ****************************
                 *        BIENVENIDO A MI   *
                 *          PROGRAMA üöÄ     *
                 *‚ú®‚ú®‚ú®Anthue Gomez‚ú®‚ú®‚ú®*
                 ****************************
                 üë∑‚Äç‚ôÇÔ∏èhistoria de Usuario:
                 Santiago es desarrollador en una startup de dom√≥tica que permite controlar luces, cortinas y aire acondicionado 
                 desde una app m√≥vil. El cliente desea que desde un panel central se puedan configurar botones que env√≠en √≥rdenes a 
                 distintos dispositivos.
                 Antes, Santiago implement√≥ l√≥gica en botones como if (tipo.equals("LUZ")) { encenderLuz(); }. Este dise√±o no era 
                 extensible. Cada vez que se agregaba un nuevo dispositivo, deb√≠a modificar c√≥digo existente, violando el principio 
                 de cerrado para modificaci√≥n.
                 Aplic√≥ el patr√≥n Command: cre√≥ una interfaz Comando con el m√©todo ejecutar(). Cada acci√≥n (encender luz, subir 
                 cortina, activar aire) se encapsul√≥ en su propia clase de comando.
                 Los botones del panel ahora reciben comandos configurables en tiempo de ejecuci√≥n. Esto permiti√≥ agregar nuevas 
                 funciones, crear colas de tareas y hasta implementar funciones de deshacer.                                                                                 
                 -------------------------------------------------------------------------------------------------------------
                ""","Patr√≥n implementado: Command");

        programa.mostrarEncabezado();
        Luz luz = new Luz();
        Cortina cortina = new Cortina();

        Comando cmdLuz = new ComandoEncenderLuz(luz);
        Comando cmdCortina = new ComandoSubirCortina(cortina);

        Boton boton1 = new Boton(cmdLuz);
        Boton boton2 = new Boton(cmdCortina);

        boton1.presionar(); // Luz encendida
        boton2.presionar(); // Cortina subida
        System.out.println("\nIdentidad codificada: " + programa.getIdentidad());
        programa.mostrarPatron();
    }
}
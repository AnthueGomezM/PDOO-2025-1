package co.edu.ucc.anthue.TemplateMethod.cliente;

import co.edu.ucc.anthue.Personalizado;
import co.edu.ucc.anthue.TemplateMethod.core.GeneradorReporte;
import co.edu.ucc.anthue.TemplateMethod.implementaciones.ReporteExcel;
import co.edu.ucc.anthue.TemplateMethod.implementaciones.ReportePDF;

public class Main {
    public static void main(String[] args) {
        Personalizado programa = new Personalizado("""
                 ------------------------------------------------------------------------------------------------------------
                 ****************************
                 *        BIENVENIDO A MI   *
                 *          PROGRAMA üöÄ     *
                 *‚ú®‚ú®‚ú®Anthue Gomez‚ú®‚ú®‚ú®*
                 ****************************
                 üë∑‚Äç‚ôÇÔ∏èhistoria de Usuario:
                 Alejandro trabaja en el backend de una plataforma contable SaaS que genera reportes para los usuarios. 
                 Los reportes pueden exportarse en PDF o Excel, y aunque comparten varios pasos (recolecci√≥n de datos, 
                 encabezado, pie de p√°gina), difieren en la forma en que presentan los datos y el formato.
                 Inicialmente, se implementaron dos clases separadas que compart√≠an mucha l√≥gica duplicada. Alejandro decidi√≥ 
                 usar el patr√≥n Template Method.
                 Cre√≥ una clase abstracta GeneradorReporte con el m√©todo generar() que incluye pasos comunes como obtenerDatos(), 
                 generarEncabezado(), generarContenido() y generarPie(). Los m√©todos generarContenido() y formatear() se dejaron como abstractos.
                 Las clases ReportePDF y ReporteExcel extienden GeneradorReporte e implementan las diferencias espec√≠ficas. 
                 Ahora, agregar un nuevo formato de exportaci√≥n solo requiere implementar dos m√©todos, manteniendo la estructura central intacta.                                                                    
                 -------------------------------------------------------------------------------------------------------------
                ""","Patr√≥n implementado: Template Method");

        programa.mostrarEncabezado();
        GeneradorReporte pdf = new ReportePDF();
        GeneradorReporte excel = new ReporteExcel();

        System.out.println("==== Generando PDF ====");
        pdf.generar();

        System.out.println("\n==== Generando Excel ====");
        excel.generar();
        programa.mostrarPatron();
    }
}
package co.edu.ucc.anthue.Visitor.cliente;

import co.edu.ucc.anthue.Personalizado;
import co.edu.ucc.anthue.Visitor.interfaz.Activo;
import co.edu.ucc.anthue.Visitor.interfaz.ActivoVisitor;
import co.edu.ucc.anthue.Visitor.modelos.Inmueble;
import co.edu.ucc.anthue.Visitor.modelos.Vehiculo;
import co.edu.ucc.anthue.Visitor.visitor.ReporteFiscalVisitor;

import java.util.ArrayList;
import java.util.List;

public class Main {
    public static void main(String[] args) {
        Personalizado programa = new Personalizado("""
                 ------------------------------------------------------------------------------------------------------------
                 ****************************
                 *        BIENVENIDO A MI   *
                 *          PROGRAMA üöÄ     *
                 *‚ú®‚ú®‚ú®Anthue Gomez‚ú®‚ú®‚ú®*
                 ****************************
                 üë∑‚Äç‚ôÇÔ∏èhistoria de Usuario:
                 Francisco trabaja en un sistema contable que maneja diferentes tipos de activos: Inmuebles, Veh√≠culos, 
                 Equipos. El sistema debe generar reportes fiscales y financieros sobre estos activos.
                 Cada tipo de activo tiene reglas distintas para el c√°lculo de depreciaci√≥n, valor residual, e impacto 
                 contable. Adem√°s, los reportes pueden cambiar con la normativa legal.
                 En lugar de modificar las clases Activo, Inmueble, Veh√≠culo, cada vez que se agrega una operaci√≥n nueva, 
                 Francisco implementa el patr√≥n Visitor. Define una interfaz ActivoVisitor con m√©todos visitar(Inmueble), visitar(Vehiculo), etc.
                 Las operaciones como ReporteFiscalVisitor, ReporteFinancieroVisitor implementan esa interfaz y aplican 
                 l√≥gica seg√∫n el tipo de activo. Esto permiti√≥ agregar nuevas operaciones sin modificar las clases base, y 
                 separar completamente la l√≥gica contable de la l√≥gica de presentaci√≥n.                                                                               
                 -------------------------------------------------------------------------------------------------------------
                ""","Patr√≥n implementado: Visitor");

        programa.mostrarEncabezado();
        List<Activo> activos = new ArrayList<>();
        activos.add(new Inmueble());
        activos.add(new Vehiculo());

        ActivoVisitor reporte = new ReporteFiscalVisitor();

        for (Activo a : activos) {
            a.aceptar(reporte);
        }
        System.out.println("\nIdentidad codificada: " + programa.getIdentidad());
        programa.mostrarPatron();
    }
}